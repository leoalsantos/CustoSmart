version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      # Você pode adicionar variáveis de ambiente adicionais conforme necessário
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - custosmart-network

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-custosmart}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-custosmart_password}
      - POSTGRES_DB=${POSTGRES_DB:-custosmart_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - custosmart-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-custosmart} -d ${POSTGRES_DB:-custosmart_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  custosmart-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local